{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","toLocaleTimeString","timerId","this","window","setInterval","setState","console","log","clearInterval","name","props","className","React","PureComponent","getRandomName","value","Math","random","toString","slice","App","hasClock","clockName","handelDocumentContextmenu","handelDocumentClick","updateClockName","document","addEventListener","_","prevState","removeEventListener","Component","ReactDOM","render","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAAIC,MAAQC,sBAFvB,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,IAAMN,EAAS,EAAKD,MAAdC,KAENA,GAAQ,IAAIC,MAAQC,qBAEpB,EAAKK,SAAS,CAAEP,SAGhBQ,QAAQC,IAAIT,KACX,OAjBP,kCAoBE,WACEU,cAAcN,KAAKD,WArBvB,oBAwBE,WACE,IAAQH,EAASI,KAAKL,MAAdC,KACAW,EAASP,KAAKQ,MAAdD,KAER,OACE,sBAAKE,UAAU,QAAf,UACE,iCAASF,IACR,YACAX,SAhCT,GAA2Bc,IAAMC,eCNjC,SAASC,IACP,IAAMC,EAAQC,KAAKC,SAASC,WAAWC,MAAM,EAAG,GAEhD,MAAM,SAAN,OAAgBJ,G,IAQZK,E,4MACJvB,MAAQ,CACNwB,UAAU,EACVC,UAAWR,K,EAGbb,QAAU,E,EAqBVsB,0BAA4B,WAC1B,EAAKlB,SAAU,CAAEgB,UAAU,IAC3Bb,cAAc,EAAKP,U,EAGrBuB,oBAAsB,WACpB,EAAKnB,SAAU,CAAEgB,UAAU,IAC3B,EAAKpB,QAAUE,OAAOC,YAAY,EAAKqB,gBAAiB,O,EAG1DA,gBAAkB,WAChB,EAAKpB,SAAS,CAAEiB,UAAWR,O,uDA9B7B,WACEZ,KAAKD,QAAUE,OAAOC,YAAYF,KAAKuB,gBAAiB,MACxDC,SAASC,iBAAiB,cAAezB,KAAKqB,2BAC9CG,SAASC,iBAAiB,QAASzB,KAAKsB,uB,gCAG1C,SAAmBI,EAAYC,GACzBA,EAAUP,YAAcpB,KAAKL,MAAMyB,WAErChB,QAAQC,IAAR,uBAA4BsB,EAAUP,UAAtC,eAAsDpB,KAAKL,MAAMyB,c,kCAIrE,WACEI,SAASI,oBAAoB,cAAe5B,KAAKqB,2BACjDG,SAASI,oBAAoB,QAAS5B,KAAKsB,qBAC3ChB,cAAcN,KAAKD,W,oBAiBrB,WACE,IAAQoB,EAAanB,KAAKL,MAAlBwB,SAER,OACE,qCACE,6CACCA,GAAY,cAAC,EAAD,CAAOZ,KAAMP,KAAKL,MAAMyB,mB,GA/C3BS,aAqDHX,ICjEfY,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.f67f43cc.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  name: string;\n};\n\ntype State = {\n  date: string,\n};\n\nexport class Clock extends React.PureComponent<Props, State> {\n  state = {\n    date: (new Date()).toLocaleTimeString(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      let { date } = this.state;\n\n      date = (new Date()).toLocaleTimeString();\n\n      this.setState({ date });\n\n      // eslint-disable-next-line no-console\n      console.log(date);\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    const { date } = this.state;\n    const { name } = this.props;\n\n    return (\n      <div className=\"clock\">\n        <strong>{name}</strong>\n        {' time is '}\n        {date}\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\nfunction getRandomName(): string {\n  const value = Math.random().toString().slice(2, 6);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean,\n  clockName: string\n};\n\nclass App extends Component<{}, State> {\n  state = {\n    hasClock: true,\n    clockName: getRandomName(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(this.updateClockName, 3300);\n    document.addEventListener('contextmenu', this.handelDocumentContextmenu);\n    document.addEventListener('click', this.handelDocumentClick);\n  }\n\n  componentDidUpdate(_: unknown, prevState: State) {\n    if (prevState.clockName !== this.state.clockName) {\n      // eslint-disable-next-line no-console\n      console.log(`Renamed from ${prevState.clockName} to ${this.state.clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('contextmenu', this.handelDocumentContextmenu);\n    document.removeEventListener('click', this.handelDocumentClick);\n    clearInterval(this.timerId);\n  }\n\n  handelDocumentContextmenu = () => {\n    this.setState(({ hasClock: false }));\n    clearInterval(this.timerId);\n  };\n\n  handelDocumentClick = () => {\n    this.setState(({ hasClock: true }));\n    this.timerId = window.setInterval(this.updateClockName, 3300);\n  };\n\n  updateClockName = () => {\n    this.setState({ clockName: getRandomName() });\n  };\n\n  render(): React.ReactNode {\n    const { hasClock } = this.state;\n\n    return (\n      <>\n        <h1>React clock</h1>\n        {hasClock && <Clock name={this.state.clockName} /> }\n      </>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}